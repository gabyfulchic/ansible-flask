---
- name: Update package manager "Debian"
  apt:
    name: "*"
    state: latest
    update_cache: yes
  when: ansible_facts['distribution'] == 'Debian' or ansible_facts['distribution'] == 'Ubuntu'

- name: Update package manager "CentOS"
  yum:
    name: "*"
    state: latest
    update_cache: yes
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Install Development Tools
  shell: |
    yum -y groupinstall "Development Tools"
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Install dependencies to build python for "CentOS"
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - "{{ dependencies_development_tools_list }}"
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Install Python3 for "CentOS"
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - "{{ python3_rhel_pkg_list }}"
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

- name: Install Python3 for "Debian"
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - "{{ python3_deb_pkg_list }}"
  when: ansible_facts['distribution'] == 'Debian' or ansible_facts['distribution'] == 'Ubuntu'

######
# To use to install python : from source || pythonz
######

#- name: Pythonz Part if "pythonz true", default "false"
#  block:
#    - name: Validate that Pythonz is not already installed
#      command: which pythonz
#      register: pythonz_installed
#    
#    - name: Get Pythonz "https://github.com/saghul/pythonz"
#      shell: curl -kL https://raw.github.com/saghul/pythonz/master/pythonz-install | bash
#      when:
#        - pythonz_installed.rc != 0
#      
#    - name: Add setup on bashrc for pythonz
#      shell: |
#        cat "[[ -s $HOME/.pythonz/etc/bashrc ]] && source $HOME/.pythonz/etc/bashrc" >> ~/.bashrc
#        source ~/.bashrc
#      when:
#        - pythonz_installed.rc != 0
#    
#    - name: Install Python with Pythonz
#      shell: pythonz install --url {{ python_archive_url }} {{ python_version }}
#  when:
#    - pythonz
#
#- name: Install Python from source if "python_from_source true", default "false"
#  block:
#    - name: Prepare directory to receive archive
#      file:
#        state: directory
#        path: "/tmp/{{ python_archive_name }}"
#        owner: root
#        group: root
#        mode: '0755'
#  
#    - name: Get and Extract python archive
#      unarchive:
#        src: "{{ python_archive_url }}"
#        dest: "/tmp/{{ python_archive_name }}"
#        remote_src: yes
#    
#    - name: Build and Install Python
#      script: "{{ python_compile_script_name }}"
#      args:
#        chdir: "/tmp/{{ python_archive_name }}/" 
#        executable: /bin/bash
#  when:
#    - python_from_source
